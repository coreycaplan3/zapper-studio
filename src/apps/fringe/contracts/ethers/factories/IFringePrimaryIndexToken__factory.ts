/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IFringePrimaryIndexToken,
  IFringePrimaryIndexTokenInterface,
} from "../IFringePrimaryIndexToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenPrj",
        type: "address",
      },
    ],
    name: "AddPrjToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenPrj",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prjDepositAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiar",
        type: "address",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenPrj",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "ltfNumerator",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "ltfDenominator",
        type: "uint8",
      },
    ],
    name: "LiquidationThresholdFactorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenPrj",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "lvrNumerator",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "lvrDenominator",
        type: "uint8",
      },
    ],
    name: "LoanToValueRatioSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenPrj",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prjWithdrawAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiar",
        type: "address",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "MODERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendingTokenAmount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "borrowLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "borrowPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "loanBody",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accrual",
            type: "uint256",
          },
        ],
        internalType: "struct IFringePrimaryIndexToken.BorrowPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectTokenAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "depositPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "depositedProjectTokenAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IFringePrimaryIndexToken.DepositPosition",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "getPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "depositedProjectTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "loanBody",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accrual",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactorNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "healthFactorDenominator",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectTokenAmount",
        type: "uint256",
      },
    ],
    name: "getProjectTokenEvaluation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "healthFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "lendingTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            internalType: "address",
            name: "bLendingToken",
            type: "address",
          },
        ],
        internalType: "struct IFringePrimaryIndexToken.LendingTokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lendingTokenId",
        type: "uint256",
      },
    ],
    name: "lendingTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "liquidationThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "pit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "pitRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
    ],
    name: "projectTokenInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isListed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isPaused",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "numerator",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "denominator",
                type: "uint8",
              },
            ],
            internalType: "struct IFringePrimaryIndexToken.Ratio",
            name: "loanToValueRatio",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "numerator",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "denominator",
                type: "uint8",
              },
            ],
            internalType: "struct IFringePrimaryIndexToken.Ratio",
            name: "liquidationThresholdFactor",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "numerator",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "denominator",
                type: "uint8",
              },
            ],
            internalType: "struct IFringePrimaryIndexToken.Ratio",
            name: "liquidationIncentive",
            type: "tuple",
          },
        ],
        internalType: "struct IFringePrimaryIndexToken.ProjectTokenInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectTokenId",
        type: "uint256",
      },
    ],
    name: "projectTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bLendingTokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendingTokenAmount",
        type: "uint256",
      },
    ],
    name: "redeemUnderlying",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendingTokenAmount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lendingTokenAmount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "totalBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
    ],
    name: "totalDepositedProjectToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "totalOutstanding",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
    ],
    name: "updateInterestInBorrowPositions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "projectToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "lendingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectTokenAmount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFringePrimaryIndexToken__factory {
  static readonly abi = _abi;
  static createInterface(): IFringePrimaryIndexTokenInterface {
    return new utils.Interface(_abi) as IFringePrimaryIndexTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFringePrimaryIndexToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IFringePrimaryIndexToken;
  }
}
